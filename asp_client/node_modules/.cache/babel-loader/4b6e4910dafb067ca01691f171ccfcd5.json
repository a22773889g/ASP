{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\acer\\\\Desktop\\\\asp\\\\asp_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport data from '../data';\nvar initialState = data.map(function (book) {\n  var temp = Object.assign({}, book);\n\n  switch (temp.BookCategory) {\n    case \"database\":\n      temp.BookCategory = \"你好\";\n      break;\n\n    default:\n      break;\n  }\n\n  return temp;\n});\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_BOOK':\n      return [{\n        BookId: action.BookId,\n        BookName: action.BookName,\n        BookCategory: action.BookCategory,\n        BookAuthor: action.BookAuthor,\n        BookBoughtDate: action.BookBoughtDate,\n        BookDeliveredDate: action.BookDeliveredDate,\n        BookPrice: action.BookPrice,\n        BookAmount: action.BookAmount,\n        BookTotal: action.BookTotal\n      }].concat(_toConsumableArray(state));\n\n    case 'REMOVE_BOOK':\n      return state.filter(function (book) {\n        return book.BookId !== action.BookId;\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\acer\\Desktop\\asp\\asp_client\\src\\reducers\\book.js"],"names":["data","initialState","map","book","temp","Object","assign","BookCategory","state","action","type","BookId","BookName","BookAuthor","BookBoughtDate","BookDeliveredDate","BookPrice","BookAmount","BookTotal","filter"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,IAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAQ;AACpC,MAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,CAAX;;AACK,UAAQC,IAAI,CAACG,YAAb;AACE,SAAK,UAAL;AACEH,MAAAA,IAAI,CAACG,YAAL,GAAkB,IAAlB;AACA;;AAEF;AACE;AANJ;;AAQC,SAAOH,IAAP;AACP,CAXoB,CAArB;AAYA,gBAAe,YAAkC;AAAA,MAAjCI,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEA,SAAK,UAAL;AACE,cAAO;AACLC,QAAAA,MAAM,EAAEF,MAAM,CAACE,MADV;AAELC,QAAAA,QAAQ,EAAEH,MAAM,CAACG,QAFZ;AAGLL,QAAAA,YAAY,EAAEE,MAAM,CAACF,YAHhB;AAILM,QAAAA,UAAU,EAAEJ,MAAM,CAACI,UAJd;AAKLC,QAAAA,cAAc,EAAEL,MAAM,CAACK,cALlB;AAMLC,QAAAA,iBAAiB,EAAEN,MAAM,CAACM,iBANrB;AAOLC,QAAAA,SAAS,EAAEP,MAAM,CAACO,SAPb;AAQLC,QAAAA,UAAU,EAAER,MAAM,CAACQ,UARd;AASLC,QAAAA,SAAS,EAAET,MAAM,CAACS;AATb,OAAP,4BAUKV,KAVL;;AAWF,SAAK,aAAL;AACE,aAAOA,KAAK,CAACW,MAAN,CAAa,UAAAhB,IAAI;AAAA,eAAEA,IAAI,CAACQ,MAAL,KAAcF,MAAM,CAACE,MAAvB;AAAA,OAAjB,CAAP;;AACF;AACE,aAAOH,KAAP;AAjBF;AAmBD,CApBH","sourcesContent":["import data from '../data'\r\n\r\nconst initialState = data.map((book)=>{\r\n  let temp = Object.assign({}, book);\r\n       switch (temp.BookCategory) {\r\n         case \"database\":\r\n           temp.BookCategory=\"你好\"\r\n           break;\r\n       \r\n         default:\r\n           break;\r\n       }\r\n        return temp;\r\n})\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n  \r\n    case 'ADD_BOOK':\r\n      return[{ \r\n        BookId: action.BookId,\r\n        BookName: action.BookName,\r\n        BookCategory: action.BookCategory,\r\n        BookAuthor: action.BookAuthor,\r\n        BookBoughtDate: action.BookBoughtDate,\r\n        BookDeliveredDate: action.BookDeliveredDate,\r\n        BookPrice: action.BookPrice,\r\n        BookAmount: action.BookAmount,\r\n        BookTotal: action.BookTotal\r\n      },...state];\r\n    case 'REMOVE_BOOK':\r\n      return state.filter(book=>book.BookId!==action.BookId);\r\n    default:\r\n      return state\r\n    }\r\n  }\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}